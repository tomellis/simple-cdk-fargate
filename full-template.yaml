Resources:
  SqsFargateVPC4C9B3DB7:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/Resource
  SqsFargateVPCPublicSubnet1Subnet0B362589:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet1/Subnet
  SqsFargateVPCPublicSubnet1RouteTable77F26DBB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet1/RouteTable
  SqsFargateVPCPublicSubnet1RouteTableAssociationCBDD3B42:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPublicSubnet1RouteTable77F26DBB
      SubnetId:
        Ref: SqsFargateVPCPublicSubnet1Subnet0B362589
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet1/RouteTableAssociation
  SqsFargateVPCPublicSubnet1DefaultRoute391FF0B2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPublicSubnet1RouteTable77F26DBB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: SqsFargateVPCIGW15743DCA
    DependsOn:
      - SqsFargateVPCVPCGW58655901
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet1/DefaultRoute
  SqsFargateVPCPublicSubnet1EIP80A8B5F9:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet1/EIP
  SqsFargateVPCPublicSubnet1NATGatewayA5254AF6:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - SqsFargateVPCPublicSubnet1EIP80A8B5F9
          - AllocationId
      SubnetId:
        Ref: SqsFargateVPCPublicSubnet1Subnet0B362589
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet1/NATGateway
  SqsFargateVPCPublicSubnet2Subnet4E5148EB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet2/Subnet
  SqsFargateVPCPublicSubnet2RouteTable706D63A6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet2/RouteTable
  SqsFargateVPCPublicSubnet2RouteTableAssociationEA1A2097:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPublicSubnet2RouteTable706D63A6
      SubnetId:
        Ref: SqsFargateVPCPublicSubnet2Subnet4E5148EB
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet2/RouteTableAssociation
  SqsFargateVPCPublicSubnet2DefaultRouteDACE9195:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPublicSubnet2RouteTable706D63A6
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: SqsFargateVPCIGW15743DCA
    DependsOn:
      - SqsFargateVPCVPCGW58655901
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet2/DefaultRoute
  SqsFargateVPCPublicSubnet2EIPEB2BC610:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet2/EIP
  SqsFargateVPCPublicSubnet2NATGateway72EED77C:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - SqsFargateVPCPublicSubnet2EIPEB2BC610
          - AllocationId
      SubnetId:
        Ref: SqsFargateVPCPublicSubnet2Subnet4E5148EB
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PublicSubnet2/NATGateway
  SqsFargateVPCPrivateSubnet1Subnet3235366D:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet1/Subnet
  SqsFargateVPCPrivateSubnet1RouteTable56058FBD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet1/RouteTable
  SqsFargateVPCPrivateSubnet1RouteTableAssociation3B2D45C4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPrivateSubnet1RouteTable56058FBD
      SubnetId:
        Ref: SqsFargateVPCPrivateSubnet1Subnet3235366D
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet1/RouteTableAssociation
  SqsFargateVPCPrivateSubnet1DefaultRoute6F42EDE6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPrivateSubnet1RouteTable56058FBD
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: SqsFargateVPCPublicSubnet1NATGatewayA5254AF6
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet1/DefaultRoute
  SqsFargateVPCPrivateSubnet2SubnetFE8811B1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet2/Subnet
  SqsFargateVPCPrivateSubnet2RouteTable401F0A2C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet2/RouteTable
  SqsFargateVPCPrivateSubnet2RouteTableAssociation0B560725:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPrivateSubnet2RouteTable401F0A2C
      SubnetId:
        Ref: SqsFargateVPCPrivateSubnet2SubnetFE8811B1
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet2/RouteTableAssociation
  SqsFargateVPCPrivateSubnet2DefaultRoute1A494DC2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: SqsFargateVPCPrivateSubnet2RouteTable401F0A2C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: SqsFargateVPCPublicSubnet2NATGateway72EED77C
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/PrivateSubnet2/DefaultRoute
  SqsFargateVPCIGW15743DCA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: SqsFargateStack/SqsFargateVPC
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/IGW
  SqsFargateVPCVPCGW58655901:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
      InternetGatewayId:
        Ref: SqsFargateVPCIGW15743DCA
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateVPC/VPCGW
  applicationloadbalancer646253D3:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - applicationloadbalancerSecurityGroup9CA5E982
            - GroupId
      Subnets:
        - Ref: SqsFargateVPCPublicSubnet1Subnet0B362589
        - Ref: SqsFargateVPCPublicSubnet2Subnet4E5148EB
      Type: application
    DependsOn:
      - SqsFargateVPCPublicSubnet1DefaultRoute391FF0B2
      - SqsFargateVPCPublicSubnet2DefaultRouteDACE9195
    Metadata:
      aws:cdk:path: SqsFargateStack/application-loadbalancer/Resource
  applicationloadbalancerSecurityGroup9CA5E982:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB SqsFargateStackapplicationloadbalancerD5B644BA
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
    Metadata:
      aws:cdk:path: SqsFargateStack/application-loadbalancer/SecurityGroup/Resource
  applicationloadbalancerSecurityGrouptoSqsFargateStackserviceSecurityGroupEA49BAC28098095783:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - applicationloadbalancerSecurityGroup9CA5E982
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - serviceSecurityGroupF051F0EB
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: SqsFargateStack/application-loadbalancer/SecurityGroup/to SqsFargateStackserviceSecurityGroupEA49BAC2:80
  applicationloadbalancerhttplistenerE0654140:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: applicationloadbalancerhttplistenerTargetGroupGroup31A62B28
          Type: forward
      LoadBalancerArn:
        Ref: applicationloadbalancer646253D3
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: SqsFargateStack/application-loadbalancer/http-listener/Resource
  applicationloadbalancerhttplistenerTargetGroupGroup31A62B28:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
    Metadata:
      aws:cdk:path: SqsFargateStack/application-loadbalancer/http-listener/TargetGroupGroup/Resource
  SqsFargateQueueADE0FB79:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateQueue/Resource
  SqsFargateQueuePolicy1BAB0A9D:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: SqsFargateTopic249FB2F4
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              Fn::GetAtt:
                - SqsFargateQueueADE0FB79
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: SqsFargateQueueADE0FB79
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateQueue/Policy/Resource
  SqsFargateQueueSqsFargateStackSqsFargateTopic57DD12E462F528A3:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn:
        Ref: SqsFargateTopic249FB2F4
      Endpoint:
        Fn::GetAtt:
          - SqsFargateQueueADE0FB79
          - Arn
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateQueue/SqsFargateStackSqsFargateTopic57DD12E4/Resource
  SqsFargateTopic249FB2F4:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateTopic/Resource
  SqsFargateClusterF5409EB7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: SqsFargateStack/SqsFargateCluster/Resource
  FargateTaskDefinitionTaskRoleE3C2BCAA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SqsFargateStack/FargateTaskDefinition/TaskRole/Resource
  FargateTaskDefinitionTaskRoleDefaultPolicy798E9D9D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:ReceiveMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueUrl
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SqsFargateQueueADE0FB79
                - Arn
        Version: "2012-10-17"
      PolicyName: FargateTaskDefinitionTaskRoleDefaultPolicy798E9D9D
      Roles:
        - Ref: FargateTaskDefinitionTaskRoleE3C2BCAA
    Metadata:
      aws:cdk:path: SqsFargateStack/FargateTaskDefinition/TaskRole/DefaultPolicy/Resource
  FargateTaskDefinition8E3B365E:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:a10988853acc07f1a196c62b572c3b7374235b20b2cb41c15df61f4df3e9900f
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: FargateTaskDefinitionsimplewebserviceLogGroupAC26B869
              awslogs-stream-prefix: SqsFargate
              awslogs-region:
                Ref: AWS::Region
          Name: simple-web-service
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          StopTimeout: 120
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - FargateTaskDefinitionExecutionRoleE69A8E33
          - Arn
      Family: SqsFargateStackFargateTaskDefinition925A103C
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - FargateTaskDefinitionTaskRoleE3C2BCAA
          - Arn
    Metadata:
      aws:cdk:path: SqsFargateStack/FargateTaskDefinition/Resource
  FargateTaskDefinitionsimplewebserviceLogGroupAC26B869:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SqsFargateStack/FargateTaskDefinition/simple-web-service/LogGroup/Resource
  FargateTaskDefinitionExecutionRoleE69A8E33:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SqsFargateStack/FargateTaskDefinition/ExecutionRole/Resource
  FargateTaskDefinitionExecutionRoleDefaultPolicy1632DA52:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FargateTaskDefinitionsimplewebserviceLogGroupAC26B869
                - Arn
        Version: "2012-10-17"
      PolicyName: FargateTaskDefinitionExecutionRoleDefaultPolicy1632DA52
      Roles:
        - Ref: FargateTaskDefinitionExecutionRoleE69A8E33
    Metadata:
      aws:cdk:path: SqsFargateStack/FargateTaskDefinition/ExecutionRole/DefaultPolicy/Resource
  serviceService7DDC3B7C:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: SqsFargateClusterF5409EB7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: simple-web-service
          ContainerPort: 80
          TargetGroupArn:
            Ref: applicationloadbalancerhttplistenerTargetGroupGroup31A62B28
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - serviceSecurityGroupF051F0EB
                - GroupId
          Subnets:
            - Ref: SqsFargateVPCPrivateSubnet1Subnet3235366D
            - Ref: SqsFargateVPCPrivateSubnet2SubnetFE8811B1
      PlatformVersion: 1.4.0
      TaskDefinition:
        Ref: FargateTaskDefinition8E3B365E
    DependsOn:
      - applicationloadbalancerhttplistenerE0654140
      - applicationloadbalancerhttplistenerTargetGroupGroup31A62B28
    Metadata:
      aws:cdk:path: SqsFargateStack/service/Service
  serviceSecurityGroupF051F0EB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SqsFargateStack/service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SqsFargateVPC4C9B3DB7
    Metadata:
      aws:cdk:path: SqsFargateStack/service/SecurityGroup/Resource
  serviceSecurityGroupfromSqsFargateStackapplicationloadbalancerSecurityGroup59B14A3180661042DE:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - serviceSecurityGroupF051F0EB
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - applicationloadbalancerSecurityGroup9CA5E982
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: SqsFargateStack/service/SecurityGroup/from SqsFargateStackapplicationloadbalancerSecurityGroup59B14A31:80
  serviceTaskCountTargetBE844528:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 50
      MinCapacity: 0
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: SqsFargateClusterF5409EB7
            - /
            - Fn::GetAtt:
                - serviceService7DDC3B7C
                - Name
      RoleARN:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":iam::"
            - Ref: AWS::AccountId
            - :role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      ScheduledActions:
        - ScalableTargetAction:
            MinCapacity: 50
          Schedule: cron(0 0 * * ? *)
          ScheduledActionName: MidnightBatchProcessingUp
        - ScalableTargetAction:
            MinCapacity: 0
          Schedule: cron(0 2 * * ? *)
          ScheduledActionName: MidnightBatchProcessingDown
    Metadata:
      aws:cdk:path: SqsFargateStack/service/TaskCount/Target/Resource
  serviceTaskCountTargetQueueMessagesScalingLowerPolicyA4AE1FDE:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: SqsFargateStackserviceTaskCountTargetQueueMessagesScalingLowerPolicyCB4C9738
      PolicyType: StepScaling
      ScalingTargetId:
        Ref: serviceTaskCountTargetBE844528
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -10
    Metadata:
      aws:cdk:path: SqsFargateStack/service/TaskCount/Target/QueueMessagesScaling/LowerPolicy/Resource
  serviceTaskCountTargetQueueMessagesScalingLowerAlarmB0DBE51C:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - Ref: serviceTaskCountTargetQueueMessagesScalingLowerPolicyA4AE1FDE
      AlarmDescription: Lower threshold scaling alarm
      Metrics:
        - Expression: messagesVisible + messagesNotVisible
          Id: expr_1
        - Id: messagesVisible
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value:
                    Fn::GetAtt:
                      - SqsFargateQueueADE0FB79
                      - QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Id: messagesNotVisible
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value:
                    Fn::GetAtt:
                      - SqsFargateQueueADE0FB79
                      - QueueName
              MetricName: ApproximateNumberOfMessagesNotVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Maximum
          ReturnData: false
      Threshold: 0
    Metadata:
      aws:cdk:path: SqsFargateStack/service/TaskCount/Target/QueueMessagesScaling/LowerAlarm/Resource
  serviceTaskCountTargetQueueMessagesScalingUpperPolicy7A8F3088:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: SqsFargateStackserviceTaskCountTargetQueueMessagesScalingUpperPolicy55C10D36
      PolicyType: StepScaling
      ScalingTargetId:
        Ref: serviceTaskCountTargetBE844528
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 9
            ScalingAdjustment: 1
          - MetricIntervalLowerBound: 9
            MetricIntervalUpperBound: 29
            ScalingAdjustment: 5
          - MetricIntervalLowerBound: 29
            MetricIntervalUpperBound: 49
            ScalingAdjustment: 10
          - MetricIntervalLowerBound: 49
            ScalingAdjustment: 50
    Metadata:
      aws:cdk:path: SqsFargateStack/service/TaskCount/Target/QueueMessagesScaling/UpperPolicy/Resource
  serviceTaskCountTargetQueueMessagesScalingUpperAlarm216DC2F9:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - Ref: serviceTaskCountTargetQueueMessagesScalingUpperPolicy7A8F3088
      AlarmDescription: Upper threshold scaling alarm
      Metrics:
        - Expression: messagesVisible + messagesNotVisible
          Id: expr_1
        - Id: messagesVisible
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value:
                    Fn::GetAtt:
                      - SqsFargateQueueADE0FB79
                      - QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Id: messagesNotVisible
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value:
                    Fn::GetAtt:
                      - SqsFargateQueueADE0FB79
                      - QueueName
              MetricName: ApproximateNumberOfMessagesNotVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Maximum
          ReturnData: false
      Threshold: 1
    Metadata:
      aws:cdk:path: SqsFargateStack/service/TaskCount/Target/QueueMessagesScaling/UpperAlarm/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.54.0,@aws-cdk/assets=1.54.0,@aws-cdk/aws-applicationautoscaling=1.54.0,@aws-cdk/aws-autoscaling=1.54.0,@aws-cdk/aws-autoscaling-common=1.54.0,@aws-cdk/aws-autoscaling-hooktargets=1.54.0,@aws-cdk/aws-cloudwatch=1.54.0,@aws-cdk/aws-codeguruprofiler=1.54.0,@aws-cdk/aws-ec2=1.54.0,@aws-cdk/aws-ecr=1.54.0,@aws-cdk/aws-ecr-assets=1.54.0,@aws-cdk/aws-ecs=1.54.0,@aws-cdk/aws-elasticloadbalancingv2=1.54.0,@aws-cdk/aws-events=1.54.0,@aws-cdk/aws-iam=1.54.0,@aws-cdk/aws-kms=1.54.0,@aws-cdk/aws-lambda=1.54.0,@aws-cdk/aws-logs=1.54.0,@aws-cdk/aws-s3=1.54.0,@aws-cdk/aws-s3-assets=1.54.0,@aws-cdk/aws-servicediscovery=1.54.0,@aws-cdk/aws-sns=1.54.0,@aws-cdk/aws-sns-subscriptions=1.54.0,@aws-cdk/aws-sqs=1.54.0,@aws-cdk/aws-ssm=1.54.0,@aws-cdk/cloud-assembly-schema=1.54.0,@aws-cdk/core=1.54.0,@aws-cdk/custom-resources=1.54.0,@aws-cdk/cx-api=1.54.0,@aws-cdk/region-info=1.54.0,jsii-runtime=node.js/v12.16.2
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

